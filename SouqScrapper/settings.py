"""
Django settings for SouqScrapper project.

Generated by 'django-admin startproject' using Django 1.11.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from kombu import Exchange
from kombu import Queue

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'wti=qbfbmn%4&ve89rp+rh()!cmi1df(op5na#@8fyw*#e+@j8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'SouqScrapperApp',
    'rest_framework',
    'import_export',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'SouqScrapper.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'SouqScrapper.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    # 'default': {
    #         'ENGINE': 'django.db.backends.mysql',
    #         'NAME': 'scrapper',
    #         'USER': 'root',
    #         'PASSWORD': 'souq_admin',
    #         'HOST': 'localhost',   # Or an IP Address that your DB is hosted on
    #         'PORT': '3306',
    #     }
    #
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }

    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'souq',
        'USER': 'postgres',
        'PASSWORD': 'admin1234',
        'HOST': 'localhost',  # '127.0.0.1'
        'PORT': '5432',  # '5556'
    }
}

# 'default': {
#     'ENGINE': 'django.db.backends.mysql',
#     'NAME': 'scrapper',
#     'USER': 'root',
#     'PASSWORD': 'souq_admin',
#     'HOST': 'localhost',   # Or an IP Address that your DB is hosted on
#     'PORT': '3306',
# }


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# LOGGER
# LOGGING
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'verbose': {
            'format': "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt': "%d/%b/%Y %H:%M:%S"
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'scrapper.log',
            'formatter': 'verbose'
        },
    },
    'loggers': {
        'SouqScrapperApp': {
            'handlers': ['file'],
            'level': 'DEBUG',
        },
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, '/static/')

# SHOPIFY
API_KEY = '9ff17ed2058b5f0e0bceb81663d6f2a8'
API_PASSWORD = 'f594faa989f974f342673d56acad4f8a'
PRODUCT_URL = 'https://{}:{}@mystyl-co.myshopify.com/admin/products.json'
PRODUCT_UPDATE_URL = 'https://{}:{}@mystyl-co.myshopify.com/admin/products/{}.json'
PRODUCT_VARIANT_URL = 'https://{}:{}@mystyl-co.myshopify.com/admin/variants/{}.json'

# CELERY
BROKER_URL = 'amqp://guest:guest@localhost:5672//'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SOFT_TIME_LIMIT = 60 * 60 * 24
CELERY_ACKS_LATE = True
CELERY_PREFETCH_MULTIPLIER = 100
CELERY_MAX_TASKS_PER_CHILD = 100

# celery worker -A ... -Q random-tasks --concurrency=4
CELERY_IGNORE_RESULT = True
# CELERY_QUEUES = (
#     # Queue('default', Exchange('default'), routing_key='default'),
#     Queue('scrapFirstQuarter', Exchange('scrapFirstQuarter'), routing_key='scrapFirstQuarter'),
#     Queue('scrapSecondQuarter', Exchange('scrapSecondQuarter'), routing_key='scrapSecondQuarter'),
#     Queue('scrapThirdQuarter', Exchange('scrapThirdQuarter'), routing_key='scrapThirdQuarter'),
#     Queue('scrapForthQuarter', Exchange('scrapForthQuarter'), routing_key='scrapForthQuarter'),
#     Queue('scrapFiveQuarter', Exchange('scrapFiveQuarter'), routing_key='scrapFiveQuarter'),
#     Queue('scrapSixQuarter', Exchange('scrapSixQuarter'), routing_key='scrapSixQuarter'),
# )
#
#
# CELERY_ROUTES = {
#     'scrapFirstQuarter': {'queue': 'scrapFirstQuarter', 'routing_key': 'scrapFirstQuarter'},
#     'scrapSecondQuarter': {'queue': 'scrapSecondQuarter', 'routing_key': 'scrapSecondQuarter'},
#     'scrapThirdQuarter': {'queue': 'scrapThirdQuarter', 'routing_key': 'scrapThirdQuarter'},
#     'scrapForthQuarter': {'queue': 'scrapForthQuarter', 'routing_key': 'scrapForthQuarter'},
#     'scrapFiveQuarter': {'queue': 'scrapFiveQuarter', 'routing_key': 'scrapFiveQuarter'},
#     'scrapSixQuarter': {'queue': 'scrapSixQuarterSouq', 'routing_key': 'scrapSixQuarterSouq'},
# }
